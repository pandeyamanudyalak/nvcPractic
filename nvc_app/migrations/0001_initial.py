# Generated by Django 4.1.1 on 2022-09-28 07:58

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='GroupModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='attachments')),
            ],
        ),
        migrations.CreateModel(
            name='PositionModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='TicketModel',
            fields=[
                ('ticket_id', models.AutoField(primary_key=True, serialize=False)),
                ('query_type', models.CharField(choices=[('installation', 'Installation'), ('service', 'Service'), ('spares', 'Spares'), ('sales snquiry', 'Sales Enquiry')], max_length=30)),
                ('ticket_email', models.EmailField(max_length=255, verbose_name='ticket_email')),
                ('ticket_number', models.CharField(blank=True, max_length=200, null=True)),
                ('ticket_creator_name', models.CharField(max_length=200)),
                ('ticket_creator_address', models.CharField(max_length=500)),
                ('ticket_creator_zip', models.IntegerField()),
                ('equipment_name', models.CharField(blank=True, max_length=200, null=True)),
                ('equipment_sr_no', models.CharField(blank=True, max_length=200, null=True)),
                ('equipment_model_no', models.CharField(blank=True, max_length=200, null=True)),
                ('problem_description', models.CharField(blank=True, max_length=200, null=True)),
                ('production_temprorary_running', models.BooleanField(default=False)),
                ('running_with_rejection', models.BooleanField(default=False)),
                ('production_breakdown', models.BooleanField(default=False)),
                ('sales_production_name', models.CharField(blank=True, max_length=200, null=True)),
                ('process_mc_type', models.CharField(blank=True, max_length=200, null=True)),
                ('max_kg_or_hrs', models.CharField(blank=True, max_length=200, null=True)),
                ('material_denticty', models.CharField(blank=True, max_length=200, null=True)),
                ('virgin', models.BooleanField(default=False)),
                ('regrind', models.BooleanField(default=False)),
                ('falkes', models.BooleanField(default=False)),
                ('master_batch', models.BooleanField(default=False)),
                ('additives_1', models.BooleanField(default=False)),
                ('additives_2', models.BooleanField(default=False)),
                ('work_order_no', models.IntegerField(blank=True, null=True)),
                ('packing_slip_no', models.IntegerField(blank=True, null=True)),
                ('receive_in_good_condition', models.CharField(choices=[('Yes', 'yes'), ('No', 'No')], default='Yes', max_length=10)),
                ('equipment_description', models.CharField(blank=True, max_length=400, null=True)),
                ('production_trial_readliness_date', models.DateField(blank=True, null=True)),
                ('pending', models.BooleanField(default=False)),
                ('ready', models.BooleanField(default=False)),
                ('during_engg_visit', models.BooleanField(default=False)),
                ('not_understood_list', models.BooleanField(default=False)),
                ('further_tech_guidence_needed', models.BooleanField(default=False)),
                ('spare_name', models.CharField(blank=True, max_length=200, null=True)),
                ('spare_sr_no', models.CharField(blank=True, max_length=200, null=True)),
                ('spare_model_name', models.CharField(blank=True, max_length=200, null=True)),
                ('part_name', models.CharField(blank=True, max_length=200, null=True)),
                ('part_description', models.CharField(blank=True, max_length=200, null=True)),
                ('part_quantity', models.IntegerField(blank=True, null=True)),
                ('closed_ticket', models.BooleanField(default=False)),
                ('on_call_ticket', models.BooleanField(default=False)),
                ('visit_and_closed', models.BooleanField(default=False)),
                ('visit_scheduled', models.BooleanField(default=False)),
                ('waiting_for_spares', models.BooleanField(default=False)),
                ('status_of_ticket', models.CharField(choices=[('telephonic resolution', 'Telephonic Resolution'), ('require spare utilities', 'Require Spare Utilities'), ('payment pending', 'Payment Pending'), ('received by customer', 'Received By Customer'), ('revisit', 'Revisit'), ('resolved', 'Resolved')], max_length=200)),
                ('priorty', models.IntegerField(blank=True, null=True)),
                ('attach_file', models.FileField(upload_to='attachments')),
                ('review', models.CharField(blank=True, max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ZoneModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('zone_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='Email')),
                ('user_name', models.CharField(max_length=200)),
                ('user_company_name', models.CharField(max_length=200)),
                ('user_city', models.CharField(max_length=100)),
                ('user_zip_code', models.IntegerField()),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('fcm_token', models.CharField(blank=True, max_length=400, null=True)),
                ('user_group_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='nvc_app.groupmodel')),
                ('user_position_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='nvc_app.positionmodel')),
                ('user_zone_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='nvc_app.zonemodel')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
